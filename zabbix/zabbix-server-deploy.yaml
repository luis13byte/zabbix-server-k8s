apiVersion: apps/v1
kind: Deployment
metadata:
  name: zabbix-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zabbix
      tier: server
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        name: zabbix-server
        app: zabbix
        tier: server
    spec:
      initContainers:
      - name: pgsql-client-initializer
        image: postgres:13.4
        imagePullPolicy: "IfNotPresent"
        command: ['bash', '-c', 'until pg_isready -h zabbix-db -p 5432;
          do echo waiting for database; sleep 2; done']
      containers:
        - name: zabbix-server
          image: zabbix/zabbix-server-pgsql:alpine-5.4-latest
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 10051
            name: masterport
            protocol: TCP
          securityContext:  
            privileged: true
            #allowPrivilegeEscalation: false
            #runAsUser: 0

#          livenessProbe:
#            tcpSocket:
#              port: masterport
#            initialDelaySeconds: 5
#            periodSeconds: 3
#          readinessProbe:
#            tcpSocket:
#              port: masterport
#            initialDelaySeconds: 10
#            periodSeconds: 5

          envFrom:
          - configMapRef:
              name: zabbix-server-env

        - name: zabbix-agent
          image: zabbix/zabbix-agent:alpine-5.4-latest
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 10050
          envFrom:
          - configMapRef:
              name: zabbix-agent-env
          # Para monitorear recursos del sistema el contenedor debe ser privilegiado
          securityContext:
            privileged: true
#            allowPrivilegeEscalation: false
#            runAsUser: 0
