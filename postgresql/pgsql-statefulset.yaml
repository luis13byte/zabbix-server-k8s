apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pgsql-dbms
spec:
  serviceName: pgsql-svc
  selector:
    matchLabels:
      app: pgsql
  replicas: 2
  # Estrategia a la hora de aplicar este manifiesto
  updateStrategy:
    type: RollingUpdate
    # Esto hace que se actualicen los pods con un numero ordinal mayor o igual que 0 (disponible solo para statefulsets)
    rollingUpdate:
      partition: 0
  template:
    metadata:
      labels:
        app: pgsql
    spec:
      containers:
        - name: pgsql-dbms
          image: postgres:13.4
          imagePullPolicy: "IfNotPresent"
          # Limites de recursos por pod
          resources:
            limits:
              cpu: 400m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 100Mi
          # Puerto a exponer del contenedor y liveness probe
          ports:
            - name: pgport
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: pgport
            initialDelaySeconds: 80
            periodSeconds: 20
          # Configurar eventos del ciclo de vida del contenedor
          lifecycle: 
            postStart:
              exec:
                command: ['bash', '-c', '/config/init-zabbix-structure.sh']
          # Hacer referencia a secrets para importar variables
          env:
          - name: POSTGRES_DB
            value: zabbix
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: pgsql-secret-values
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:    
              secretKeyRef:
                name: pgsql-secret-values
                key: POSTGRES_PASSWORD
          # Crea el punto de montaje postgresql-data
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pgsql-data
              readOnly: false
            # Usar configmap para enviar archivos de configuraci√≥n a los pods mediante un volumen (se pueden copiar automaticamente a data/ usando un pod custom con initContainer)
            - mountPath: /opt/custom-postgresql-conf
              name: custom-postgresql-conf
            # Mover script y volcado a esta ruta, para crear la estructura de zabbix DB
            - mountPath: /config
              name: pgsql-templatesdb

      # Asigna el PVC que hara referencia al punto de montaje en el contenedor
      volumes:
        - name: pgsql-data
          persistentVolumeClaim:
            claimName: pgsql-pv-data-claim
        - name: custom-postgresql-conf
          configMap:
            name: custom-postgresql-configmap
        - name: pgsql-templatesdb
          persistentVolumeClaim:
            claimName: pgsql-pv-templatesdb-claim
